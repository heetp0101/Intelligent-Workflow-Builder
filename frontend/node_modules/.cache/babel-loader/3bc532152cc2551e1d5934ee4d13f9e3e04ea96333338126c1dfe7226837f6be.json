{"ast":null,"code":"export const saveWorkflow = async workflowData => {\n  try {\n    const response = await fetch('http://localhost:8000/api/save_workflow', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(workflowData)\n    });\n    if (!response.ok) {\n      throw new Error(`Server responded with status ${response.status}`);\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Failed to save workflow:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["saveWorkflow","workflowData","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","error","console"],"sources":["E:/AI Projects/Intelligent Workflow Builder/frontend/src/api/workflow.js"],"sourcesContent":["export const saveWorkflow = async (workflowData) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/save_workflow', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(workflowData),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Server responded with status ${response.status}`);\n      }\n  \n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Failed to save workflow:', error);\n      throw error;\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,YAAY,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,YAAY;IACnC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgCR,QAAQ,CAACS,MAAM,EAAE,CAAC;IACpE;IAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}