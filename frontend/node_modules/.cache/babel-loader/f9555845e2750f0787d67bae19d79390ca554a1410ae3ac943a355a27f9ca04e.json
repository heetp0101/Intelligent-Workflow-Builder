{"ast":null,"code":"export const saveWorkflow=async workflowData=>{try{const response=await fetch('http://localhost:8000/api/save_workflow',{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(workflowData)}).then(response=>response.json()).then(result=>console.log(result)).catch(error=>console.error(\"Error:\",error));if(!response.ok){throw new Error(`Server responded with status ${response.status}`);}console.log(\"data to be sent : \",workflowData);const result=await response.json();return result;}catch(error){console.error('Failed to save workflow:',error);throw error;}};","map":{"version":3,"names":["saveWorkflow","workflowData","response","fetch","method","headers","body","JSON","stringify","then","json","result","console","log","catch","error","ok","Error","status"],"sources":["E:/AI Projects/Intelligent Workflow Builder/frontend/src/api/workflow.js"],"sourcesContent":["export const saveWorkflow = async (workflowData) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/save_workflow', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(workflowData),\n      })\n      .then((response) => response.json())\n      .then((result) => console.log(result))\n      .catch((error) => console.error(\"Error:\", error));\n  \n      if (!response.ok) {\n        throw new Error(`Server responded with status ${response.status}`);\n      }\n\n      console.log(\"data to be sent : \",workflowData)\n  \n      const result = await response.json();\n      return result;\n    } catch (error) {\n      console.error('Failed to save workflow:', error);\n      throw error;\n    }\n  };\n  "],"mappings":"AAAA,MAAO,MAAM,CAAAA,YAAY,CAAG,KAAO,CAAAC,YAAY,EAAK,CAChD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yCAAyC,CAAE,CACtEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,YAAY,CACnC,CAAC,CAAC,CACDQ,IAAI,CAAEP,QAAQ,EAAKA,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CACnCD,IAAI,CAAEE,MAAM,EAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACrCG,KAAK,CAAEC,KAAK,EAAKH,OAAO,CAACG,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAAC,CAEjD,GAAI,CAACb,QAAQ,CAACc,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,gCAAgCf,QAAQ,CAACgB,MAAM,EAAE,CAAC,CACpE,CAEAN,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAACZ,YAAY,CAAC,CAE9C,KAAM,CAAAU,MAAM,CAAG,KAAM,CAAAT,QAAQ,CAACQ,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAC,MAAM,CACf,CAAE,MAAOI,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}